select(-wh_numeric) %>%
spread(wh, surprisal) %>%
mutate(wh_effect=what-`that`) %>%
group_by(region, gap, gap_position, model) %>%
summarise(m=mean(wh_effect),
s=std.error(wh_effect),
upper=m + 1.96*s,
lower=m - 1.96*s) %>%
ungroup() %>%
mutate(region=as.numeric(region)) %>%
ggplot(aes(x=region, y=m, ymax=upper, ymin=lower,linetype=gap, color=gap_position)) +
geom_line() +
geom_errorbar(linetype="solid", width=.1) +
scale_x_continuous(breaks=seq(1, NUM_REGIONS), labels=REGION_EXEMPLARS) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
geom_hline(yintercept=0, color="blue", alpha=0.5) +
facet_wrap(~model, ncol = 3) +
ylab("Mean Wh-Effect in Region") +
xlab("Region") +
theme(legend.position="top", legend.margin=margin(c(0,0,0,0)))
ggsave("~/Desktop/island-graphs/position-wordbyword.pdf",height=3,width=7)
d_agg %>%
filter(model == "gulordava" | model == "google") %>%
select(-wh_numeric) %>%
spread(gap, surprisal) %>%
mutate(gap_effect=`no-gap`-gap) %>%
select(-unk, -gap, -`no-gap`) %>%
spread(wh, gap_effect) %>%
mutate(wh_interaction=what-`that`) %>%
group_by(region, gap_position, model) %>%
summarise(m=mean(wh_interaction),
s=std.error(wh_interaction),
upper=m + 1.96*s,
lower=m - 1.96*s) %>%
ungroup() %>%
na.exclude() %>%
mutate(region=as.numeric(region)) %>%
ggplot(aes(x=region, y=m, ymax=upper, ymin=lower, color=gap_position)) +
geom_line(alpha=0.3) +
geom_point(size = 2) +
geom_errorbar(linetype="solid", width=.1) +
scale_x_continuous(breaks=seq(1, NUM_REGIONS), labels=REGION_EXEMPLARS) +
theme(axis.text.x = element_text(angle=45, hjust=1, size = 6)) +
theme(axis.title.x=element_blank()) +
facet_wrap(~model, ncol = 2) +
ylab("Wh-Licensing Interaction") +
#xlab("Region") +
theme(legend.position="right", legend.margin=margin(c(0,0,0,0)))
ggsave("~/Desktop/island-graphs/position-wordbyword-whinteraction.pdf",height=2,width=7)
d_whe_1 = d_agg %>%
filter(region == "Verb", gap_position == "subj") %>%
filter(model == "google" | model == "gulordava") %>%
select(-wh_numeric) %>%
spread(wh, surprisal) %>%
mutate(wh_effect=what-`that`)
d_whe_2 = d_agg %>%
filter(region == "Prep", gap_position == "obj") %>%
filter(model == "google" | model == "gulordava") %>%
select(-wh_numeric) %>%
spread(wh, surprisal) %>%
mutate(wh_effect=what-`that`)
d_whe_3 = d_agg %>%
filter(region == "End", gap_position == "pp") %>%
filter(model == "google" | model == "gulordava") %>%
select(-wh_numeric) %>%
spread(wh, surprisal) %>%
mutate(wh_effect=what-`that`)
d_wh_effect = Reduce(function(x, y) merge(x, y, all=TRUE), list(d_whe_1, d_whe_2, d_whe_3))
d_wh_effect %>%
group_by(model, gap, gap_position) %>%
summarise(m=mean(wh_effect),
s=std.error(wh_effect),
upper=m+1.96*s,
lower=m-1.96*s) %>%
ungroup() %>%
ggplot(aes(x=gap_position, y=m, ymin=lower, ymax=upper, fill=gap)) +
geom_bar(stat="identity", position="dodge") +
geom_errorbar(color="black", width=.5, position=position_dodge(width=.9)) +
facet_wrap(~model) +
ylab("Surprisal with Wh-phrase - Surprisal without Wh-phrase") +
xlab("Gap Location") +
theme(legend.position = c(0.8, 0.2)) +
ggtitle("Wh-Main Effect, Post Gap Material")
ggsave("~/Desktop/island-graphs/position-wheffect-postgap.pdf",height=5,width=3.5)
d_full_interaction_1 = d_agg %>%
filter(region == "Verb", gap_position == "subj") %>%
select(-wh_numeric) %>%
spread(gap, surprisal) %>%
mutate(gap_effect=`no-gap`-gap) %>%
select(-unk, -gap, -`no-gap`) %>%
spread(wh, gap_effect) %>%
mutate(wh_interaction=what-`that`)
d_full_interaction_2 = d_agg %>%
filter(region == "Prep", gap_position == "obj") %>%
select(-wh_numeric) %>%
spread(gap, surprisal) %>%
mutate(gap_effect=`no-gap`-gap) %>%
select(-unk, -gap, -`no-gap`) %>%
spread(wh, gap_effect) %>%
mutate(wh_interaction=what-`that`)
d_full_interaction_3 = d_agg %>%
filter(region == "End", gap_position == "pp") %>%
select(-wh_numeric) %>%
spread(gap, surprisal) %>%
mutate(gap_effect=`no-gap`-gap) %>%
select(-unk, -gap, -`no-gap`) %>%
spread(wh, gap_effect) %>%
mutate(wh_interaction=what-`that`)
d_full_interaction = Reduce(function(x, y) merge(x, y, all=TRUE), list(d_full_interaction_1, d_full_interaction_2, d_full_interaction_3))
d_full_interaction %>%
filter(model == "google" | model == "gulordava") %>%
group_by(model, gap_position) %>%
summarise(m=mean(wh_interaction, na.rm=T),
s=std.error(wh_interaction, na.rm=T),
upper=m+1.96*s,
lower=m-1.96*s) %>%
ungroup() %>%
ggplot(aes(x=gap_position, y=m, ymin=lower, ymax=upper, fill=gap_position)) +
geom_bar(stat="identity") +
geom_errorbar(color="black", width=.5, position=position_dodge(width=.9)) +
facet_wrap(~model) +
ylab("Wh-Licensing Interaction") +
xlab("Gap Location") +
theme(legend.position="none") +
ggtitle("Post Gap Material")
ggsave("~/Desktop/island-graphs/position-postgap.pdf",height=5,width=3.5)
d_agg = d_agg %>%
mutate(gap_numeric=if_else(gap == "gap", 1, -1)) %>%
mutate(wh_numeric = if_else(wh == "what", 1, -1))
# For the subject condition
m_google = d_agg %>%
filter(region == "Verb", gap_position == "subj") %>%
filter(model == "google") %>%
lmer(surprisal ~ wh_numeric * gap_numeric + (wh_numeric+gap_numeric|sent_index), data=.)
summary(m_google)
m_gul = d_agg %>%
filter(region == "Verb", gap_position == "subj") %>%
filter(model == "gulordava") %>%
lmer(surprisal ~ wh_numeric * gap_numeric + (wh_numeric+gap_numeric|sent_index), data=.)
summary(m_gul)
# For the object condition
m_google = d_agg %>%
filter(region == "Prep", gap_position == "obj") %>%
filter(model == "google") %>%
lmer(surprisal ~ wh_numeric * gap_numeric + (wh_numeric+gap_numeric|sent_index), data=.)
summary(m_google)
m_gul = d_agg %>%
filter(region == "Prep", gap_position == "obj") %>%
filter(model == "gulordava") %>%
lmer(surprisal ~ wh_numeric * gap_numeric + (wh_numeric+gap_numeric|sent_index), data=.)
summary(m_gul)
# For the PP/Goal condition
m_google = d_agg %>%
filter(region == "End", gap_position == "pp") %>%
filter(model == "google") %>%
lmer(surprisal ~ wh_numeric * gap_numeric + (wh_numeric+gap_numeric|sent_index), data=.)
summary(m_google)
m_gul = d_agg %>%
filter(region == "End", gap_position == "pp") %>%
filter(model == "gulordava") %>%
lmer(surprisal ~ wh_numeric * gap_numeric + (wh_numeric+gap_numeric|sent_index), data=.)
summary(m_gul)
d = read_csv("tests/combined_results.csv") %>%
select(-1, -2) %>%
mutate(unk=unk == "True") %>%
mutate(region=if_else(region == "Prefix" | region == "wh-subj" | region == "wh-obj" | region == "wh-prep" | region == "that", "prefix", region)) %>%
mutate(region = if_else(region == "apositive" | region == "NP1" | region == "Verb" | region == "NP2" | region == "Prep" | region == "NP3" | region == "End" | region == "EOS", "embed", region)) %>%
separate(condition, sep="_", into=c("wh", "gap", "gap_position"))
d_agg = d %>%
group_by(model, region, sent_index, wh, gap, gap_position) %>%
summarise(surprisal=sum(surprisal),
unk=any(unk)) %>%
ungroup() %>%
filter(!unk) %>%
mutate(wh_numeric=if_else(wh == "what", 1, -1),
wh=factor(wh, levels=c("what", "that")),
gap=factor(gap, levels=c("no-gap", "gap")),
gap_position=factor(gap_position, levels=c("subj", "obj", "pp")))
d_whe_3 = d_agg %>%
filter(region == "embed") %>%
filter(model == "google" | model == "gulordava") %>%
select(-wh_numeric) %>%
spread(wh, surprisal) %>%
mutate(wh_effect=what-`that`)
d_wh_effect = Reduce(function(x, y) merge(x, y, all=TRUE), list(d_whe_1, d_whe_2, d_whe_3))
d_wh_effect %>%
group_by(model, gap, gap_position) %>%
summarise(m=mean(wh_effect),
s=std.error(wh_effect),
upper=m+1.96*s,
lower=m-1.96*s) %>%
ungroup() %>%
ggplot(aes(x=gap_position, y=m, ymin=lower, ymax=upper, fill=gap)) +
geom_bar(stat="identity", position="dodge") +
geom_errorbar(color="black", width=.5, position=position_dodge(width=.9)) +
facet_wrap(~model) +
ylab("Surprisal with Wh-phrase - Surprisal without Wh-phrase") +
xlab("Gap Location") +
theme(legend.position = c(0.8, 0.8)) +
ggtitle("Wh-Main Effect, Whole Clause")
ggsave("~/Desktop/island-graphs/position-wheffect-wholeclause.pdf",height=5,width=3.5)
d_full_interaction = d_agg %>%
filter(region == "embed") %>%
select(-wh_numeric) %>%
spread(gap, surprisal) %>%
mutate(gap_effect=`no-gap`-gap) %>%
select(-unk, -gap, -`no-gap`) %>%
spread(wh, gap_effect) %>%
mutate(wh_interaction=what-`that`)
d_full_interaction %>%
filter(model == "google" | model == "gulordava") %>%
group_by(model, gap_position) %>%
summarise(m=mean(wh_interaction, na.rm=T),
s=std.error(wh_interaction, na.rm=T),
upper=m+1.96*s,
lower=m-1.96*s) %>%
ungroup() %>%
ggplot(aes(x=gap_position, y=m, ymin=lower, ymax=upper, fill=gap_position)) +
geom_bar(stat="identity") +
geom_errorbar(color="black", width=.5, position=position_dodge(width=.9)) +
facet_wrap(~model) +
ylab("Wh-Licensing Interaction") +
xlab("Gap Location") +
theme(legend.position="none") +
ggtitle("Whole Clause")
ggsave("~/Desktop/island-graphs/position-wholeclause.pdf",height=5,width=3.5)
d_agg = d_agg %>%
mutate(gap_numeric=if_else(gap == "gap", 1, -1)) %>%
mutate(wh_numeric = if_else(wh == "what", 1, -1))
m_google = d_agg %>%
filter(model == "google", region == "embed") %>%
lmer(surprisal ~ gap * wh_numeric * gap_position + (gap+wh_numeric+gap_position|sent_index), data=.)
summary(m_google)
m_gul = d_agg %>%
filter(model == "gulordava", region == "embed") %>%
lmer(surprisal ~ gap * wh_numeric * gap_position + (gap+wh_numeric+gap_position|sent_index), data=.)
summary(m_gul)
setwd("~/Documents/rnnpsycholing/filler-gap-dependencies/gap_distance")
d = read_csv("tests/combined_results.csv") %>%
select(-1, -2) %>%
mutate(unk=unk == "True") %>%
mutate(region=if_else(region=="prefix" | region=="obj wh" | region=="goal wh" | region=="that", "prefix", region)) %>%
mutate(region=if_else(region=="short modifier" | region=="medium modifier" | region=="long modifier", "modifier", region)) %>%
separate(condition, sep="_", into=c("wh", "gap", "gap_position", "modifier"))
d_agg = d %>%
group_by(model, region, sent_index, wh, gap, gap_position, modifier) %>%
summarise(surprisal=sum(surprisal), unk=any(unk), distance=n()) %>%
ungroup() %>%
filter(!unk) %>%
mutate(wh_numeric=if_else(wh == "wh", 1, -1),
wh=factor(wh, levels=c("wh", "that")),
gap=factor(gap, levels=c("gap", "no-gap")),
gap_position=factor(gap_position, levels=c("obj", "goal")),
modifier=factor(modifier, levels=c("no-mod", "short-mod", "med-mod", "long-mod")))
d_len = d_agg %>%
mutate(region2 = region) %>% #So when we spread region we still have the region information
mutate(modifier2 = modifier) %>% #Because modifier is both a name of our condition and a region!
spread(region, distance) %>%
group_by(sent_index, wh, gap, gap_position, wh_numeric, modifier2) %>%
fill(c("End", "goal", "modifier", "object", "prefix", "subj", "temporal_modifier", "to", "verb"), .direction = c("down"))%>%
fill(c("End", "goal", "modifier", "object", "prefix", "subj", "temporal_modifier", "to", "verb"), .direction = c("up"))%>%
ungroup()%>%
mutate_if(is.numeric , replace_na, replace = 0) %>%
select(-object, -End, -goal, -prefix, -subj, -temporal_modifier, -to, -verb) %>%
filter(region2 == "to") %>%
filter(gap_position == "obj")
d_dist = d_len %>%
group_by(model, sent_index, wh, gap, gap_position, modifier2, modifier) %>%
summarise(total_surprisal = sum(surprisal)) %>%
ungroup() %>%
filter(gap_position=="obj") %>%
spread(gap, total_surprisal) %>%
mutate(gap_effect=`no-gap`-gap) %>%
select(-gap, -`no-gap`) %>%
spread(wh, gap_effect) %>%
mutate(wh_interaction=wh-`that`)
d_dist %>%
filter(model == "google" | model == "gulordava") %>%
ggplot(aes(x=modifier, y=wh_interaction)) +
geom_point() +
stat_smooth(method='lm') +
facet_wrap(~model) +
ylab("Licensing Interaction") +
xlab("Length of Modifier in Words") +
ggtitle("Obj Position, Post-Gap Material") +
facet_wrap(~model) +
geom_hline(yintercept=0, color="red", alpha=0.5)
ggsave("~/Desktop/island-graphs/length-postgap-obj.pdf",height=2.5,width=3.5)
d_len = d_len %>%
mutate(wh=if_else(wh == "wh", 1, -1)) %>%
mutate(gap=if_else(gap == "gap", 1, -1))
goog_freq = d_len %>%
filter(model == "google") %>%
lmer(surprisal ~ wh * gap * modifier + (wh + gap + modifier  |sent_index), data=.)
summary(goog_freq)
gul_freq = d_len %>%
filter(model == "gulordava") %>%
lmer(surprisal ~ wh * gap * modifier + (wh + gap + modifier |sent_index), data=.)
summary(gul_freq)
head(d_len)
head(d_dist)
d_dist %>%
sum(wh_interaction > 0)
sum(d_dist.wh_interaction > 0)
head(d_dist)
sum(d_dist["wh_interaction"] > 0)
sum(d_dist["wh_interaction"] > 0)
len(d_dist)
sum(d_dist["wh_interaction"] > 0)
length(d_dist)
sum(d_dist["wh_interaction"] > 0)
nrow(d_dist)
d = read_csv("tests/combined_results.csv") %>%
select(-1, -2) %>%
mutate(unk=unk == "True") %>%
mutate(region=if_else(region=="prefix" | region=="obj wh" | region=="goal wh" | region=="that", "prefix", region)) %>%
mutate(region=if_else(region=="short modifier" | region=="medium modifier" | region=="long modifier", "modifier", region)) %>%
separate(condition, sep="_", into=c("wh", "gap", "gap_position", "modifier"))
d_agg = d %>%
group_by(model, region, sent_index, wh, gap, gap_position, modifier) %>%
summarise(surprisal=sum(surprisal), unk=any(unk), distance=n()) %>%
ungroup() %>%
filter(!unk) %>%
mutate(wh_numeric=if_else(wh == "wh", 1, -1),
wh=factor(wh, levels=c("wh", "that")),
gap=factor(gap, levels=c("gap", "no-gap")),
gap_position=factor(gap_position, levels=c("obj", "goal")),
modifier=factor(modifier, levels=c("no-mod", "short-mod", "med-mod", "long-mod")))
d_len = d_agg %>%
mutate(region2 = region) %>% #So when we spread region we still have the region information
mutate(modifier2 = modifier) %>% #Because modifier is both a name of our condition and a region!
spread(region, distance) %>%
group_by(sent_index, wh, gap, gap_position, wh_numeric, modifier2) %>%
fill(c("End", "goal", "modifier", "object", "prefix", "subj", "temporal_modifier", "to", "verb"), .direction = c("down"))%>%
fill(c("End", "goal", "modifier", "object", "prefix", "subj", "temporal_modifier", "to", "verb"), .direction = c("up"))%>%
ungroup()%>%
mutate_if(is.numeric , replace_na, replace = 0) %>%
select(-object, -End, -goal, -prefix, -subj, -temporal_modifier, -to, -verb) %>%
filter(region2 == "to") %>%
filter(gap_position == "obj")
d_dist = d_len %>%
group_by(model, sent_index, wh, gap, gap_position, modifier2, modifier) %>%
summarise(total_surprisal = sum(surprisal)) %>%
ungroup() %>%
filter(gap_position=="obj") %>%
spread(gap, total_surprisal) %>%
mutate(gap_effect=`no-gap`-gap) %>%
select(-gap, -`no-gap`) %>%
spread(wh, gap_effect) %>%
mutate(wh_interaction=wh-`that`)
d_dist %>%
filter(model == "google" | model == "gulordava") %>%
ggplot(aes(x=modifier, y=wh_interaction)) +
geom_point() +
stat_smooth(method='lm') +
facet_wrap(~model) +
ylab("Licensing Interaction") +
xlab("Length of Modifier in Words") +
ggtitle("Obj Position, Post-Gap Material") +
facet_wrap(~model) +
geom_hline(yintercept=0, color="red", alpha=0.5)
ggsave("~/Desktop/island-graphs/length-postgap-obj.pdf",height=2.5,width=3.5)
sum(d_dist["wh_interaction"] > 0)
nrow(d_dist)
d_len = d_len %>%
mutate(wh=if_else(wh == "wh", 1, -1)) %>%
mutate(gap=if_else(gap == "gap", 1, -1))
goog_freq = d_len %>%
filter(model == "google") %>%
lmer(surprisal ~ wh * gap * modifier + (wh + gap + modifier  |sent_index), data=.)
summary(goog_freq)
gul_freq = d_len %>%
filter(model == "gulordava") %>%
lmer(surprisal ~ wh * gap * modifier + (wh + gap + modifier |sent_index), data=.)
summary(gul_freq)
d_len = d_agg %>%
mutate(region2 = region) %>% #So when we spread region we still have the region information
mutate(modifier2 = modifier) %>% #Because modifier is both a name of our condition and a region!
spread(region, distance) %>%
group_by(sent_index, wh, gap, gap_position, wh_numeric, modifier2) %>%
fill(c("End", "goal", "modifier", "object", "prefix", "subj", "temporal_modifier", "to", "verb"), .direction = c("down"))%>%
fill(c("End", "goal", "modifier", "object", "prefix", "subj", "temporal_modifier", "to", "verb"), .direction = c("up"))%>%
ungroup()%>%
mutate_if(is.numeric , replace_na, replace = 0) %>%
select(-object, -End, -goal, -prefix, -subj, -temporal_modifier, -to, -verb) %>%
filter(region2 == "End") %>%
filter(gap_position == "goal")
d_dist = d_len %>%
select(-wh_numeric) %>%
filter(gap_position=="goal") %>%
spread(gap, surprisal) %>%
mutate(gap_effect=`no-gap`-gap) %>%
select(-gap, -`no-gap`) %>%
spread(wh, gap_effect) %>%
mutate(wh_interaction=wh-`that`)
d_dist %>%
filter(model == "google" | model == "gulordava") %>%
ggplot(aes(x=modifier, y=wh_interaction)) +
geom_point() +
stat_smooth(method='lm') +
facet_wrap(~model) +
ylab("Licensing Interaction") +
xlab("Length of Modifier in Words") +
ggtitle("Goal Position, Post-Gap Material") +
facet_wrap(~model) +
geom_hline(yintercept=0, color="red", alpha=0.5)
ggsave("~/Desktop/island-graphs/length-postgap-goal.pdf",height=2.5,width=3.5)
sum(d_dist["wh_interaction"] > 0)
nrow(d_dist)
d_len = d_len %>%
mutate(wh=if_else(wh == "wh", 1, -1)) %>%
mutate(gap=if_else(gap == "gap", 1, -1))
goog_freq = d_len %>%
filter(model == "google") %>%
lmer(surprisal ~ wh * gap * modifier + (wh + gap + modifier |sent_index), data=.)
summary(goog_freq)
gul_freq = d_len %>%
filter(model == "gulordava") %>%
lmer(surprisal ~ wh * gap * modifier + (wh + gap + modifier |sent_index), data=.)
summary(gul_freq)
d_len = d_agg %>%
mutate(region2 = region) %>% #So when we spread region we still have the region information
mutate(modifier2 = modifier) %>% #Because modifier is both a name of our condition and a region!
spread(region, distance) %>%
group_by(sent_index, wh, gap, gap_position, wh_numeric, modifier2) %>%
fill(c("End", "goal", "modifier", "object", "prefix", "subj", "temporal_modifier", "to", "verb"), .direction = c("down"))%>%
fill(c("End", "goal", "modifier", "object", "prefix", "subj", "temporal_modifier", "to", "verb"), .direction = c("up"))%>%
ungroup()%>%
mutate_if(is.numeric , replace_na, replace = 0) %>%
select( -object, -End, -goal, -prefix, -subj, -temporal_modifier, -to, -verb) %>%
filter(region2 == "subj" | region2 == "verb" | region2 == "to" | region2 == "goal" | region2 == "modifier" | region2 == "object") %>%
group_by(model, sent_index, wh, gap, gap_position, modifier2, modifier) %>%
summarise(total_surprisal = sum(surprisal)) %>%
ungroup() %>%
filter(gap_position=="obj")
d_dist = d_len %>%
spread(gap, total_surprisal) %>%
mutate(gap_effect=`no-gap`-gap) %>%
select(-gap, -`no-gap`) %>%
spread(wh, gap_effect) %>%
mutate(wh_interaction=wh-`that`)
d_dist %>%
filter(model == "google" | model == "gulordava") %>%
ggplot(aes(x=modifier, y=wh_interaction)) +
geom_point() +
stat_smooth(method='lm') +
facet_wrap(~model) +
ylab("Licensing Interaction") +
xlab("Length of Modifier in Words") +
ggtitle("Obj Position, Whole Clause") +
facet_wrap(~model)+
geom_hline(yintercept=0, color="red", alpha=0.5)
ggsave("~/Desktop/island-graphs/length-wholeclause-obj.pdf",height=2.5,width=3.5)
sum(d_dist["wh_interaction"] > 0)
nrow(d_dist)
d_len = d_len %>%
mutate(wh=if_else(wh == "wh", 1, -1)) %>%
mutate(gap=if_else(gap == "gap", 1, -1))
goog_freq = d_len %>%
filter(model == "google") %>%
lmer(total_surprisal ~ wh * gap * modifier + (wh + gap + modifier |sent_index), data=.)
summary(goog_freq)
gul_freq = d_len %>%
filter(model == "gulordava") %>%
lmer(total_surprisal ~ wh * gap * modifier + (1|sent_index), data=.)
summary(gul_freq)
d_len = d_agg %>%
mutate(region2 = region) %>% #So when we spread region we still have the region information
mutate(modifier2 = modifier) %>% #Because modifier is both a name of our condition and a region!
spread(region, distance) %>%
group_by(sent_index, wh, gap, gap_position, wh_numeric, modifier2) %>%
fill(c("End", "goal", "modifier", "object", "prefix", "subj", "temporal_modifier", "to", "verb"), .direction = c("down"))%>%
fill(c("End", "goal", "modifier", "object", "prefix", "subj", "temporal_modifier", "to", "verb"), .direction = c("up"))%>%
ungroup()%>%
mutate_if(is.numeric , replace_na, replace = 0) %>%
select(-wh_numeric, -object, -End, -goal, -prefix, -subj, -temporal_modifier, -to, -verb) %>%
filter(region2 == "subj" | region2 == "verb" | region2 == "to" | region2 == "goal" | region2 == "modifier" | region2 == "object") %>%
group_by(model, sent_index, wh, gap, gap_position, modifier2, modifier) %>%
summarise(total_surprisal = sum(surprisal)) %>%
ungroup() %>%
filter(gap_position=="goal")
d_dist = d_len %>%
spread(gap, total_surprisal) %>%
mutate(gap_effect=`no-gap`-gap) %>%
select(-gap, -`no-gap`) %>%
spread(wh, gap_effect) %>%
mutate(wh_interaction=wh-`that`)
d_dist %>%
filter(model == "google" | model == "gulordava") %>%
ggplot(aes(x=modifier, y=wh_interaction)) +
geom_point() +
stat_smooth(method='lm') +
facet_wrap(~model) +
ylab("Licensing Interaction") +
xlab("Length of Modifier in Words") +
ggtitle("Goal Position, Whole Clause") +
facet_wrap(~model) +
geom_hline(yintercept=0, color="red", alpha=0.5)
ggsave("~/Desktop/island-graphs/length-wholeclause-goal.pdf",height=2.5,width=3.5)
sum(d_dist["wh_interaction"] > 0)
nrow(d_dist)
d_len = d_len %>%
mutate(wh=if_else(wh == "wh", 1, -1)) %>%
mutate(gap=if_else(gap == "gap", 1, -1))
goog_freq = d_len %>%
filter(model == "google") %>%
lmer(total_surprisal ~ wh * gap * modifier + (wh + gap + modifier |sent_index), data=.)
summary(goog_freq)
gul_freq = d_len %>%
filter(model == "gulordava") %>%
lmer(total_surprisal ~ wh * gap * modifier + (1|sent_index), data=.)
summary(gul_freq)
